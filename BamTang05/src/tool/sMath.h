/*========================================================================*\
|* sMath.h
|*
|*  Created on: 31/08/2024
|*      Author: Enrique Rocafull Ortiz
|*
|* Compendio de funciones matematicas utilies desde 2010.
|*
\*========================================================================*/


#pragma once
//==========================================================================
// Includes
//==========================================================================
#include "nComun.h"
#include <GLM/glm.hpp>
//==========================================================================


//--------------------------------------------------------------------------
// Constantes
//--------------------------------------------------------------------------
const   float  cEpsilon1 = 0.1f;
//--------------------------------------------------------------------------
// Aproximacion al cero.
//--------------------------------------------------------------------------
const   float  cEpsilon5 = 0.00001f;
const   float  cEpsilon6 = 1e-6f;
const   float  cEpsilon = cEpsilon5;
// Si utilizamos float, este
const   float  cPi = 3.141592654f;
//--------------------------------------------------------------------------


//==========================================================================
// Defines
//==========================================================================
#define PI				    cPi
#define TWOPI			    (2.0*PI)
//==========================================================================


//==========================================================================
// Macros
//==========================================================================
//--------------------------------------------------------------------------
#define mAbs(s)			    ((s<0)? -s: s)
//--------------------------------------------------------------------------
#define mEsZeroZ(dNum,z)    (dNum<z && dNum>-z)
#define mEsZero(dNum)       mEsZeroZ(dNum,cEpsilon)
//--------------------------------------------------------------------------
// Cuando un numero sea inferior a Epsilon, lo hacemos igual a 0:
//--------------------------------------------------------------------------
#define mSetZero(dNum)  \
    if	(mEsZero(dNum)) \
{                       \
    dNum = 0;           \
}
//--------------------------------------------------------------------------
//==========================================================================


//==========================================================================
// Typedefs/Using
//==========================================================================
//==========================================================================


//--------------------------------------------------------------------------
// struct porque no tengo claro que sea fija o permanente
//--------------------------------------------------------------------------
struct sMath
{
    static glm::vec3 setZero(glm::vec3 vec3);
    static glm::vec3 normalize(glm::vec3 vector);
    static float getFactorReduccion(float fFactorDecr, float fDeltaTime);
};
//--------------------------------------------------------------------------


/*========================================================================*\
|* Fin de sMath.h
\*========================================================================*/
